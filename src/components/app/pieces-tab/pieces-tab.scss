@import '_colors.scss';
@import '_mixins.scss';

@mixin textEllipsisOverflow {
  overflow: hidden;
  text-overflow: ellipsis;
}

$pieceWidth: 12em;

@mixin statusIndicator {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background: black;
  opacity: 0.5;
  color: white;
  padding: 1em;
  border-radius: 50%;
  font-size: 1.5em;
  border: 1px solid white;

  & > .svg-inline--fa {
    position: absolute;
    top: 50%;
    left: 50%;
    font-size: 1em;
    transform: translate(-50%, -50%);
  }
}

.pieces-tab {
  position: relative;
  background-color: hsl(0, 0%, 10%);
  display: flex;
  justify-content: center;

  .music-link {
    width: 100%;
    height: 2em;
    color: $primaryColor;
    position: absolute;
    top: 0;
    left: 0;
    padding: 0.5em;
    display: flex;
    align-items: center;
    box-sizing: border-box;

    &__icon {
      margin-right: 5px;
    }
  }

  .pieces {
    height: 100%;
    padding: 2em;
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    max-width: 100em;

    .piece {
      overflow: hidden;
      width: $pieceWidth;
      margin: 2em 1em;
      transition: box-shadow 150ms;

      &__image {
        width: $pieceWidth;
        height: $pieceWidth;
        position: relative;
        background-color: #eee;
        cursor: pointer;
        transition: filter 150ms;

        @include hoverStyle(#{&}) {
          &:hover {
            filter: invert(0.25);
          }
        }

        & > img {
          max-width: 100%;
        }

        &__is-playing-indicator {
          @include statusIndicator;

          &--is-spinning {
            animation: 1s linear infinite spin;
          }
        }
      }

      &__info {
        color: white;

        .btn--link {
          border: none;
          background: none;
          padding: 0;
          font-size: inherit;
          cursor: pointer;
          color: inherit;
          text-align: left;

          &:focus {
            outline: none;
          }

          @include hoverStyle(#{&}) {
            &:hover {
              text-decoration: underline;
            }
          }
        }

        &__title {
          margin-top: 0.5em;
          margin-bottom: 0.2em;
        }
        &__artist {
          font-size: 0.9em;
          margin-bottom: 0.2em;
          color: #aaa;
        }

        &__tags {
          font-size: 0.7em;
          margin-bottom: 0.2em;
          color: #aaa;
        }

        &__playtime {
          font-size: 0.7em;
          color: #aaa;
        }
      }

      &__btns {
        width: 100%;
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 0.75em 0 0;
        box-sizing: border-box;

        &__btn {
          background: none;
          color: white;
          font-size: 1.25em;
          border: none;
          cursor: pointer;

          &:focus {
            outline: none;
          }

          @include hoverStyle(#{&}) {
            &:hover {
              color: #999;
            }
            &:active {
              color: #555;
            }
          }

          &--heart {
            &--is-filled {
              color: #e0245e;

              @include hoverStyle(#{&}) {
                &:hover {
                  color: #b31c4b;
                }
                &:active {
                  color: #861538;
                }
              }
            }
          }
        }
      }
    }
  }

  $mobilePieceWidth: 9em;
  @media (max-width: 768px) {
    .pieces {
      padding: 0.25em;

      .piece {
        width: $mobilePieceWidth;
        &__image {
          width: $mobilePieceWidth;
          height: $mobilePieceWidth;
        }
      }
    }
  }
}

@keyframes spin {
  from {
    transform: translate(-50%, -50%) rotate(0deg);
  }
  to {
    transform: translate(-50%, -50%) rotate(359deg);
  }
}
